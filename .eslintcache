[{"/Users/macbook/Documents/project/weathermap/src/index.js":"1","/Users/macbook/Documents/project/weathermap/src/App.js":"2","/Users/macbook/Documents/project/weathermap/src/reportWebVitals.js":"3","/Users/macbook/Documents/project/weathermap/src/componets/WeatherContainer/WeatherContainer.js":"4","/Users/macbook/Documents/project/weathermap/src/componets/CardList/CardList.js":"5","/Users/macbook/Documents/project/weathermap/src/componets/Card/Card.js":"6","/Users/macbook/Documents/project/weathermap/src/redux/store.js":"7","/Users/macbook/Documents/project/weathermap/src/reuter/AppRouter.js":"8","/Users/macbook/Documents/project/weathermap/src/componets/NavBar/NavBar.js":"9","/Users/macbook/Documents/project/weathermap/src/componets/NavBarItems/NavBarItems.js":"10","/Users/macbook/Documents/project/weathermap/src/componets/ErrorPage/ErorrCity.js":"11","/Users/macbook/Documents/project/weathermap/src/redux/reduser.js":"12","/Users/macbook/Documents/project/weathermap/src/redux/actions.js":"13"},{"size":522,"mtime":1609182301984,"results":"14","hashOfConfig":"15"},{"size":523,"mtime":1609752530061,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608839639372,"results":"17","hashOfConfig":"15"},{"size":277,"mtime":1609189723873,"results":"18","hashOfConfig":"15"},{"size":674,"mtime":1609689808717,"results":"19","hashOfConfig":"15"},{"size":317,"mtime":1609180897482,"results":"20","hashOfConfig":"15"},{"size":287,"mtime":1609689808701,"results":"21","hashOfConfig":"15"},{"size":800,"mtime":1609688024209,"results":"22","hashOfConfig":"15"},{"size":998,"mtime":1609689600329,"results":"23","hashOfConfig":"15"},{"size":648,"mtime":1609689046813,"results":"24","hashOfConfig":"15"},{"size":156,"mtime":1609591677623,"results":"25","hashOfConfig":"15"},{"size":2904,"mtime":1609687846481,"results":"26","hashOfConfig":"15"},{"size":2567,"mtime":1609690328290,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1tvfifc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/macbook/Documents/project/weathermap/src/index.js",[],["60","61"],"/Users/macbook/Documents/project/weathermap/src/App.js",["62","63"],"/Users/macbook/Documents/project/weathermap/src/reportWebVitals.js",[],"/Users/macbook/Documents/project/weathermap/src/componets/WeatherContainer/WeatherContainer.js",[],"/Users/macbook/Documents/project/weathermap/src/componets/CardList/CardList.js",["64"],"import React, {useEffect} from 'react';\nimport Card from \"../Card/Card\";\nimport { withRouter } from \"react-router\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport actions from '../../redux/actions'\n\nconst CardList = ({ history ,city}) => {\n    const dispatch = useDispatch();\n    const weather = useSelector(state=> state[city]);\n\n    useEffect(()=>{\n        dispatch(actions.fetchDataAboutCityAsync(city, history))\n    }, []);\n\n    const cardListWeather = weather.map(el => (<Card key={el.dt} data={el}/>));\n\n    return (\n        <div className='card-list__wrapper'>\n            {cardListWeather}\n        </div>\n    );\n};\n\nexport default withRouter(CardList);","/Users/macbook/Documents/project/weathermap/src/componets/Card/Card.js",[],"/Users/macbook/Documents/project/weathermap/src/redux/store.js",[],"/Users/macbook/Documents/project/weathermap/src/reuter/AppRouter.js",["65"],"import React, {useEffect} from 'react';\nimport {Switch, Route} from 'react-router-dom'\nimport WeatherContainer from \"../componets/WeatherContainer/WeatherContainer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ErorrCity from \"../componets/ErrorPage/ErorrCity\";\nimport actions from \"../redux/actions\";\n\n\nconst AppRouter = () => {\n\n\n    const citysItems = useSelector(state=> Object.keys(state));\n    const routeItems = citysItems.map((el, index)=>  <Route key={index} path={`/${el.toLowerCase()}`} render={()=><WeatherContainer city={el} />}/>);\n\n    return (\n        <Switch>\n            <Route exact path={'/'} render={()=> <h1>choice city</h1>}/>\n            {routeItems}\n            <Route path={'/*'} component={ErorrCity}/>\n        </Switch>\n    );\n};\n\nexport default AppRouter;","/Users/macbook/Documents/project/weathermap/src/componets/NavBar/NavBar.js",["66"],"import React, {useRef} from 'react';\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport NavBarItems from \"../NavBarItems/NavBarItems\";\n\nconst NavBar = () => {\n    const citysItems = useSelector(state=> Object.keys(state));\n    const inputCity = useRef(null);\n    const dispatch = useDispatch();\n\n    const itemLinks = citysItems.map((name, index)=> (\n        <NavBarItems key={index} name={name}/>\n    ));\n\n    const handlerClickOnAddCity = (e)=>{\n        e.preventDefault();\n        dispatch({type: 'ADD_NEW_CITY', payload: inputCity.current.value.toLowerCase()})\n    };\n\n    return (\n        <div className='navbar__wrapper'>\n            <form onSubmit={(e)=>handlerClickOnAddCity(e)}>\n                <input ref={inputCity} type=\"text\"/>\n                <button>add city</button>\n            </form>\n            {itemLinks}\n        </div>\n    );\n};\n\nexport default NavBar;","/Users/macbook/Documents/project/weathermap/src/componets/NavBarItems/NavBarItems.js",[],"/Users/macbook/Documents/project/weathermap/src/componets/ErrorPage/ErorrCity.js",[],"/Users/macbook/Documents/project/weathermap/src/redux/reduser.js",["67"],"import {combineReducers} from 'redux';\n\n\nif (!localStorage['city']) {\n    localStorage.setItem('city', JSON.stringify([]));\n}\n\nlet initialState  = {\n    'Kiev': []\n};\n\nif(!!localStorage['city']){\n    for (let city of JSON.parse(localStorage['city'])) {\n        initialState[city] = []\n    }\n}\n\n// const fetchData = (state = initialState.data, action) => {\n//     switch (action.type) {\n//         case 'FETCH_DATA_':\n//             const {city, data}= action.payload;\n//             return ({\n//                 ...state,\n//                 [city]: data,\n//             });\n//         default:\n//             return state\n//\n//     }\n// };\n//\n// const deleteCity = (state = initialState.data, action) => {\n//     switch (action.type) {\n//         case 'DELETE_CITY':\n//             const currentState = Object.fromEntries(Object.entries(state).filter(el => el[0] !== action.payload));\n//             return ({\n//                 ...currentState\n//             });\n//         default:\n//             return state\n//     }\n// };\n//\n// const addNewCity = (state = initialState.data, action) => {\n//     switch (action.type) {\n//         case 'ADD_NEW_CITY':\n//             localStorage['city'] = JSON.stringify([...Object.keys(state) ,action.payload]);\n//             return ({\n//                 ...state,\n//                 [action.payload]: [],\n//             });\n//         default:\n//             return state\n//\n//     }\n// };\n//\n// const addLocationUser = (state = initialState.data, action) => {\n//     switch (action.type) {\n//         case 'ADD_CITY_LOCATION_USER':\n//             const index = JSON.parse(localStorage['city']).indexOf(action.payload)\n//             if (index>-1) return state;\n//             return ({\n//                 ...state,\n//                 [action.payload]: [],\n//             });\n//         default:\n//             return state\n//     }\n// };\n//\n//\n\n\nconst reduser = (state = initialState, action)=> {\n    switch (action.type) {\n        case 'FETCH_DATA':\n            const {city, data}= action.payload;\n            return ({\n                ...state,\n                [city]: data,\n            });\n        case 'DELETE_CITY':\n            const currentState = Object.fromEntries(Object.entries(state).filter(el => el[0] !== action.payload));\n            return ({\n                ...currentState\n            });\n        case 'ADD_NEW_CITY':\n            localStorage['city'] = JSON.stringify([...Object.keys(state) ,action.payload]);\n            return ({\n                ...state,\n                [action.payload]: [],\n            });\n        case 'ADD_CITY_LOCATION_USER':\n            const index = JSON.parse(localStorage['city']).indexOf(action.payload)\n            if (index>-1) return;\n            return ({\n                ...state,\n                [action.payload]: [],\n            });\n        default:\n            return state;\n    }\n};\n\nexport default reduser;","/Users/macbook/Documents/project/weathermap/src/redux/actions.js",["68","69"],"const addCityUserActions = (data) => ({type: 'ADD_CITY_LOCATION_USER', payload:  data});\nconst deleteCityActions = (city) => ({type: 'DELETE_CITY', payload: city});\nconst addCityActions = (inputCity) => ({type: 'ADD_NEW_CITY', payload: inputCity});\nconst fetchDataWeatherActions = (city,ourData) => ({type: 'FETCH_DATA', payload: {\n        city: city,\n        data: ourData\n    }});\n\n const addCityActionsAsinc = (city, history)=> dispatch => {\n     history.push(`/${city}`);\n     dispatch(addCityActions(city));\n };\n\nconst deleteCityActionsAsync = (city, history) => dispatch => {\n    console.log('ee');\n    const currentState = JSON.parse(localStorage['city']).filter(el => el!==city);\n    localStorage['city'] = JSON.stringify(currentState);\n\n    if(JSON.parse(localStorage['city']) === 0)  history.push(`/erorr`);\n\n    history.push(`/${currentState[0]}`);\n    dispatch(deleteCityActions(city));\n};\n\nexport const addLocationOnNavigator = () => dispatch => {\n    const success = (position) =>  {\n        const latitude  = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&lang=ru&units=metric&appid=4b361086a581c7de4127fa04532a0b56`)\n            .then(res => res.json())\n            .then(data => {\n                if(+data.cod === 200) {\n                    dispatch(addCityUserActions(data.name));\n                } else {\n                    console.log('position no defined!!!');\n                }\n            })\n    };\n\n    if (navigator.geolocation) {\n        console.log('Geolocation is supported!');\n        navigator.geolocation.getCurrentPosition(success);\n    }\n    else {\n        console.log('Geolocation is not supported for this Browser/OS version yet.');\n    }\n};\n\nconst fetchDataAboutCityAsync = (city, history) => dispatch => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city.toLowerCase()}&lang=ru&units=metric&APPID=4b361086a581c7de4127fa04532a0b56`)\n        .then(res => res.json())\n        .then(data => {\n            if (data.cod ==='200'){\n                let ourData =  data.list.filter(el => el.dt_txt.includes(`15:00:00`));\n                dispatch(fetchDataWeatherActions(city, ourData));\n            } if(data.cod == '404') {\n                dispatch(deleteCityActionsAsync(city, history));\n            }\n        });\n};\n\nexport default {\n    addCityActions,\n    fetchDataAboutCityAsync,\n    addLocationOnNavigator,\n    deleteCityActions,\n    deleteCityActionsAsync,\n    addCityActionsAsinc\n}",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"79","line":16,"column":8,"nodeType":"80","endLine":16,"endColumn":10,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":13,"column":8,"nodeType":"80","endLine":13,"endColumn":10,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"79","line":15,"column":8,"nodeType":"80","endLine":15,"endColumn":10,"suggestions":"84"},{"ruleId":"74","severity":1,"message":"85","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"86","line":1,"column":9,"nodeType":"76","messageId":"77","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":56,"column":27,"nodeType":"89","messageId":"90","endLine":56,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":62,"column":1,"nodeType":"93","endLine":69,"endColumn":2},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'AppRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has missing dependencies: 'city', 'dispatch', and 'history'. Either include them or remove the dependency array.",["97"],["98"],"'Link' is defined but never used.","'combineReducers' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"99","fix":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},"Update the dependencies array to be: [city, dispatch, history]",{"range":"106","text":"107"},{"range":"108","text":"105"},[371,373],"[dispatch]",[437,439],"[city, dispatch, history]",[462,464]]